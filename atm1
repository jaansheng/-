#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<time.h>

struct Transaction
{
	char username[100];
	time_t timestamp;
	int type;//0-取款，1-存款
	int amount;//数额
	
	struct Transaction * next;
};
typedef struct Transaction Transaction;

Transaction * tHead=NULL;
Transaction * tTail=NULL;
struct Account
{
	char username[100];
	char password[100];
	int money;
	
	struct Account * next;
};
typedef struct Account Account;

Account * head=NULL;//指向头结点 
Account * tail=NULL;//指向尾结点 

Account * curAccount=NULL;//记录当前账户 

//找到返回1，否则0 
int findAccount(Account a)
{
	Account * curp=head;
	while(curp!=NULL)
	{
		if((strcmp(curp->username,a.username)==0)&&(strcmp(curp->password,a.password)==0))
		{
			curAccount=curp; 
			return 1;
		}
		curp=curp->next;
	}
	return 0;
}

void updatePassword()
{
	printf("请输入旧密码：");
	char oldPassword[100];
	scanf("%s",oldPassword);
	if(strcmp(oldPassword,curAccount->password)==0)
	{
		printf("请输入新密码：");
		scanf("%s",curAccount->password);
		printf("修改成功！\n");
	}
	else
	{
		printf("密码错误！不能修改！\n");
	}
}

void signIn()
{
	for(int i=0;i<3;i++)
	{
		Account a; 
		printf("请输入账号：");
		scanf("%s",a.username);
		
		printf("请输入密码：");
		scanf("%s",a.password);
		
		if(findAccount(a))
		{
			printf("登录成功！\n");
			updatePassword();
			break;
		}
		else
		{
			printf("登录失败！\n");
		}
	}
}
void drawMoney()
{
	printf("请输入取款金额：");
	int money;
	scanf("%d",&money);
	
	if(curAccount->money>=money)
	{
		curAccount->money-=money;
		printf("取款成功！\n");
		
		//产生交易记录
		
		//创建结点
		Transaction * newNode=(Transaction *)malloc(sizeof(Transaction));
		
		//结点初始化
		newNode->next=NULL;
		strcpy(newNode->username,curAccount->username);
		newNode->timestamp=time(NULL);
		newNode->type=1;
		newNode->amount=money;
		
		//添加交易记录结点到链表 
		if(tHead==NULL)
		{
			tHead=newNode;
			tTail=newNode;
		}
		else
		{
			tTail->next=newNode;
			tTail=newNode;
		}
		 
	}
	else
	{
		printf("余额不足!\n");
	}
}

void saveMoney()
{
	printf("请输入存款金额：");
	int money;
	scanf("%d",&money);
	
	curAccount->money+=money;
	printf("存款成功！\n");
}

void homePage()
{
	system("cls");
	//updatePassword(); 
	
	drawMoney();
	
	//saveMoney();
}


int loadData()
{
	FILE * fp=fopen("D:/atm.txt","r"); 
	if(fp==NULL)
	{
		return 0;
	}
	else
	{
		while(!feof(fp))
		{
			//创建结点
			Account *newNode=(Account *)malloc(sizeof(Account));
			
			//结点初始化
			newNode->next=NULL;
			fscanf(fp,"%s %s\n",newNode->username,newNode->password);
			
			//添加结点到链表
			if(head==NULL)
			{
				head=newNode;
				tail=newNode;	
			} 
			else
			{
				tail->next=newNode;
				tail=newNode;
			}	 
		}
		return 1;		
	}
}
void saveTransaction()
{
	FILE *fp=fopen("D:/transaction.txt","w");
	if(fp!=NULL)
	{
		Transaction * curp=tHead;
		while(curp!=NULL)
		{
			fprintf(fp,"%s %ld %d %d\n",curp->username,curp->timestamp,curp->type,curp->amount);
			curp=curp->next;
		}
		fclose(fp);
	}
}


int main()
{
	int i=loadData(); 
	if(i==1)
	{
		printf("加载成功！\n");
	}
	else
	{
		printf("加载失败！\n");
	}
	signIn();
	return 0;
}
